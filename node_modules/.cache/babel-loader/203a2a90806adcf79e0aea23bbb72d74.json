{"ast":null,"code":"import { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport favouritesReducer from \"../reducers/favourites\";\nimport jobsReducer from \"../reducers/jobs\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport localStorage from 'redux-persist/lib/storage';\nimport { encryptTransform } from 'redux-persist-transform-encrypt';\nexport const initialState = {\n  favourites: {\n    elements: []\n  },\n  jobs: {\n    elements: []\n  }\n};\nconst persistConfig = {\n  key: 'root',\n  storage: localStorage,\n  transforms: [encryptTransform({\n    secretKey: process.env.REACT_APP_SECRET_KEY,\n    onError: error => {\n      console.log(error);\n    }\n  })]\n};\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst mainReducer = combineReducers({\n  favourites: favouritesReducer,\n  jobs: jobsReducer\n});\nconst persistedReducer = persistReducer(persistConfig, mainReducer);\nconst configureStore = createStore(persistReducer, initialState, composeEnhancers(applyMiddleware(thunk)));\nconst persistor = persistStore(configureStore);\nexport { configureStore, persistor };","map":{"version":3,"sources":["/Users/bimals/Desktop/module-7/m7-d7/src/store/index.js"],"names":["createStore","combineReducers","compose","applyMiddleware","thunk","favouritesReducer","jobsReducer","persistStore","persistReducer","localStorage","encryptTransform","initialState","favourites","elements","jobs","persistConfig","key","storage","transforms","secretKey","process","env","REACT_APP_SECRET_KEY","onError","error","console","log","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","mainReducer","persistedReducer","configureStore","persistor"],"mappings":"AACA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,OAAO,MAAMC,YAAY,GAAG;AAC1BC,EAAAA,UAAU,EAAE;AACVC,IAAAA,QAAQ,EAAE;AADA,GADc;AAI1BC,EAAAA,IAAI,EAAE;AACJD,IAAAA,QAAQ,EAAE;AADN;AAJoB,CAArB;AASP,MAAME,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAC,MADgB;AAEpBC,EAAAA,OAAO,EAACR,YAFY;AAGpBS,EAAAA,UAAU,EAAE,CACVR,gBAAgB,CAAC;AACfS,IAAAA,SAAS,EAAEC,OAAO,CAACC,GAAR,CAAYC,oBADR;AAEfC,IAAAA,OAAO,EAAGC,KAAD,IAAW;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AAJc,GAAD,CADN;AAHQ,CAAtB;AAaA,MAAMG,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+C3B,OAAxE;AAEA,MAAM4B,WAAW,GAAG7B,eAAe,CAAC;AAClCW,EAAAA,UAAU,EAAEP,iBADsB;AAElCS,EAAAA,IAAI,EAAER;AAF4B,CAAD,CAAnC;AAKA,MAAMyB,gBAAgB,GAAGvB,cAAc,CAACO,aAAD,EAAgBe,WAAhB,CAAvC;AAEA,MAAME,cAAc,GAAGhC,WAAW,CAChCQ,cADgC,EAEhCG,YAFgC,EAGhCgB,gBAAgB,CAACxB,eAAe,CAACC,KAAD,CAAhB,CAHgB,CAAlC;AAMA,MAAM6B,SAAS,GAAG1B,YAAY,CAACyB,cAAD,CAA9B;AACA,SAASA,cAAT,EAAyBC,SAAzB","sourcesContent":["\nimport { createStore, combineReducers, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport favouritesReducer from \"../reducers/favourites\";\nimport jobsReducer from \"../reducers/jobs\";\nimport { persistStore, persistReducer } from 'redux-persist'\nimport localStorage from 'redux-persist/lib/storage'\nimport { encryptTransform } from 'redux-persist-transform-encrypt'\n\nexport const initialState = {\n  favourites: {\n    elements: [],\n  },\n  jobs: {\n    elements: [],\n  },\n};\n\nconst persistConfig = {\n  key:'root',\n  storage:localStorage,\n  transforms: [\n    encryptTransform({\n      secretKey: process.env.REACT_APP_SECRET_KEY,\n      onError: (error) => {\n        console.log(error)\n      }\n    })\n  ]\n}\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst mainReducer = combineReducers({\n  favourites: favouritesReducer,\n  jobs: jobsReducer,\n});\n\nconst persistedReducer = persistReducer(persistConfig, mainReducer)\n\nconst configureStore = createStore(\n  persistReducer,\n  initialState,\n  composeEnhancers(applyMiddleware(thunk))\n);\n\nconst persistor = persistStore(configureStore)\nexport { configureStore, persistor }\n\n"]},"metadata":{},"sourceType":"module"}