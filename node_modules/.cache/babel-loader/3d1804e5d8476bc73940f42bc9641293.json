{"ast":null,"code":"var _jsxFileName = \"/Users/bimals/Desktop/module-7/m7-d7/src/components/MainSearch.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport JobResult from \"./JobResult\";\nimport uniqid from \"uniqid\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchJobs } from \"../actions\";\nimport { useSelector, useDispatch } from \"react-redux\"; // const mapDispatchToProps = (dispatch) => ({\n//   fetchJobs: (baseEndpoint, query) => dispatch(fetchJobs(baseEndpoint, query)),\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MainSearch = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [jobs, setJobs] = useState([]);\n  const company = useSelector(state => state);\n  const dispatch = useDispatch();\n  baseEndpoint = \"https://strive-jobs-api.herokuapp.com/jobs?search=\";\n\n  handleChange = e => {\n    setQuery(e.target.value);\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    dispatch(fetchJobs(baseEndpoint, setQuery));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        xs: 10,\n        className: \"mx-auto my-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Remote Jobs Search\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/favourites\",\n          className: \"btn btn-primary\",\n          children: \"Favourites\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 10,\n        className: \"mx-auto\",\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"search\",\n            value: setQuery,\n            onChange: handleChange,\n            placeholder: \"type and press Enter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        xs: 10,\n        className: \"mx-auto mb-5\",\n        children: company.jobs.elements.map(jobData => /*#__PURE__*/_jsxDEV(JobResult, {\n          data: jobData\n        }, uniqid(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 7\n  }, this);\n};\n\n_s(MainSearch, \"CxEwdOSLhrBMs2hYfZDcUQ6IF5k=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = MainSearch;\nexport default MainSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainSearch\");","map":{"version":3,"sources":["/Users/bimals/Desktop/module-7/m7-d7/src/components/MainSearch.jsx"],"names":["React","useState","Container","Row","Col","Form","JobResult","uniqid","Link","connect","fetchJobs","useSelector","useDispatch","MainSearch","query","setQuery","jobs","setJobs","company","state","dispatch","baseEndpoint","handleChange","e","target","value","handleSubmit","preventDefault","elements","map","jobData"],"mappings":";;;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,GAAzB,EAA8BC,IAA9B,QAA0C,iBAA1C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAIA;AACA;AACA;;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AAEvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACe,IAAD,EAAOC,OAAP,IAAmBhB,QAAQ,CAAC,EAAD,CAAjC;AAEA,QAAMiB,OAAO,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAV,CAA3B;AAEA,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AAEAS,EAAAA,YAAY,GAAG,oDAAf;;AAEAC,EAAAA,YAAY,GAAIC,CAAD,IAAO;AACpBR,IAAAA,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAIAC,EAAAA,YAAY,GAAG,MAAOH,CAAP,IAAa;AAC1BA,IAAAA,CAAC,CAACI,cAAF;AACAP,IAAAA,QAAQ,CAACV,SAAS,CAACW,YAAD,EAAeN,QAAf,CAAV,CAAR;AACD,GAHD;;AAME,sBACE,QAAC,SAAD;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA,gCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,aAAT;AAAuB,UAAA,SAAS,EAAC,iBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,SAAS,EAAC,SAAvB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,QAAQ,EAAEW,YAAhB;AAAA,iCACE,QAAC,IAAD,CAAM,OAAN;AACE,YAAA,IAAI,EAAC,QADP;AAEE,YAAA,KAAK,EAAEX,QAFT;AAGE,YAAA,QAAQ,EAAEO,YAHZ;AAIE,YAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAiBE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAa,QAAA,SAAS,EAAC,cAAvB;AAAA,kBACGJ,OAAO,CAACF,IAAR,CAAaY,QAAb,CAAsBC,GAAtB,CAA2BC,OAAD,iBACzB,QAAC,SAAD;AAA0B,UAAA,IAAI,EAAEA;AAAhC,WAAgBvB,MAAM,EAAtB;AAAA;AAAA;AAAA;AAAA,gBADD;AADH;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4BH,CAjDD;;GAAMM,U;UAKYF,W,EAECC,W;;;KAPbC,U;AAmDN,eAAeA,UAAf","sourcesContent":["\n   \nimport React, { useState } from \"react\";\nimport { Container, Row, Col, Form } from \"react-bootstrap\";\nimport JobResult from \"./JobResult\";\nimport uniqid from \"uniqid\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { fetchJobs } from \"../actions\";\nimport { useSelector ,useDispatch } from \"react-redux\";\n\n\n\n// const mapDispatchToProps = (dispatch) => ({\n//   fetchJobs: (baseEndpoint, query) => dispatch(fetchJobs(baseEndpoint, query)),\n// });\n\nconst MainSearch = () => {\n\n  const [query, setQuery] = useState('')\n  const [jobs, setJobs]  = useState([])\n\n  const company = useSelector(state => state)\n\n  const dispatch = useDispatch()\n \n  baseEndpoint = \"https://strive-jobs-api.herokuapp.com/jobs?search=\";\n\n  handleChange = (e) => {\n    setQuery(e.target.value);\n  };\n\n  handleSubmit = async (e) => {\n    e.preventDefault();\n    dispatch(fetchJobs(baseEndpoint, setQuery));\n  };\n\n \n    return (\n      <Container>\n        <Row>\n          <Col xs={10} className=\"mx-auto my-3\">\n            <h1>Remote Jobs Search</h1>\n            <Link to=\"/favourites\" className=\"btn btn-primary\">\n              Favourites\n            </Link>\n          </Col>\n          <Col xs={10} className=\"mx-auto\">\n            <Form onSubmit={handleSubmit}>\n              <Form.Control\n                type=\"search\"\n                value={setQuery}\n                onChange={handleChange}\n                placeholder=\"type and press Enter\"\n              />\n            </Form>\n          </Col>\n          <Col xs={10} className=\"mx-auto mb-5\">\n            {company.jobs.elements.map((jobData) => (\n              <JobResult key={uniqid()} data={jobData} />\n            ))}\n          </Col>\n        </Row>\n      </Container>\n    );\n  \n}\n\nexport default MainSearch;"]},"metadata":{},"sourceType":"module"}